<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="initial-scale=1,user-scalable=no,maximum-scale=1,width=device-width">
        <meta name="mobile-web-app-capable" content="yes">
        <meta name="apple-mobile-web-app-capable" content="yes">
        <link rel="stylesheet" href="css/leaflet.css">
        <link rel="stylesheet" href="css/qgis2web.css"><link rel="stylesheet" href="css/fontawesome-all.min.css">
        <style>
        #map {
            width: 800px;
            height: 400px;
        }
        </style>
        <title></title>
    </head>
    <body>
	<h1> Economic Deprivation Index of Toronto, 2011 </h1>
	<p> This web map shows a variety of economic deprivation variables in Toronto in 2011. The variables shown in the following maps are used to
	show economic variables that can show which neighbourhoods in Toronto are experiencing economic deprivation. The variables used were after-tax
	household income, debt risk score, unemployment, rent bank applicants, and social assistance recipients.  </p>
        <div id="map">
        </div>
	<p> Created by Sara Murdoch, Data from Wellbeing Toronto and Toronto Open Data, reference period is 2011.  </p>
        <script src="js/qgis2web_expressions.js"></script>
        <script src="js/qgis2web_expressions.js"></script>
        <script src="js/leaflet.js"></script>
        <script src="js/leaflet.rotatedMarker.js"></script>
        <script src="js/leaflet.pattern.js"></script>
        <script src="js/leaflet-hash.js"></script>
        <script src="js/Autolinker.min.js"></script>
        <script src="js/rbush.min.js"></script>
        <script src="js/labelgun.min.js"></script>
        <script src="js/labels.js"></script>
        <script src="data/indexscore_1.js"></script>
        <script src="data/unemployment_2.js"></script>
        <script src="data/rentbank_3.js"></script>
        <script src="data/socialassistance_4.js"></script>
        <script src="data/debtrisk_5.js"></script>
        <script src="data/aveincome_6.js"></script>
        <script src="data/popdensity_7.js"></script>
        <script>
        var map = L.map('map', {
            zoomControl:true, maxZoom:28, minZoom:1
        }).fitBounds([[43.511600057302,-79.65986815923152],[43.89355452962762,-79.09025711296457]]);
        var hash = new L.Hash(map);
        map.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
        var autolinker = new Autolinker({truncate: {length: 30, location: 'smart'}});
        var bounds_group = new L.featureGroup([]);
        function setBounds() {
        }
        map.createPane('pane_ESRIWorldTopo_0');
        map.getPane('pane_ESRIWorldTopo_0').style.zIndex = 400;
        var layer_ESRIWorldTopo_0 = L.tileLayer('http://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}', {
            pane: 'pane_ESRIWorldTopo_0',
            opacity: 1.0,
            attribution: '',
            minZoom: 1,
            maxZoom: 28,
            minNativeZoom: 0,
            maxNativeZoom: 20
        });
        layer_ESRIWorldTopo_0;
        map.addLayer(layer_ESRIWorldTopo_0);
        function pop_indexscore_1(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>fid</strong><br />' + (feature.properties['fid'] !== null ? autolinker.link(feature.properties['fid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                   
                  
                  
                    <tr>\
                        <td colspan="2"><strong>Neighbourhood</strong><br />' + (feature.properties['Neighbourhood'] !== null ? autolinker.link(feature.properties['Neighbourhood'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Pop</strong><br />' + (feature.properties['Total_Pop'] !== null ? autolinker.link(feature.properties['Total_Pop'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Area</strong><br />' + (feature.properties['Total_Area'] !== null ? autolinker.link(feature.properties['Total_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>pop_density </strong><br />' + (feature.properties['pop_density '] !== null ? autolinker.link(feature.properties['pop_density '].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>sum_index</strong><br />' + (feature.properties['sum_index'] !== null ? autolinker.link(feature.properties['sum_index'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_indexscore_1_0(feature) {
            if (feature.properties['sum_index'] >= 6597.358336 && feature.properties['sum_index'] <= 8549.851226 ) {
                return {
                pane: 'pane_indexscore_1',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,255,255,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['sum_index'] >= 8549.851226 && feature.properties['sum_index'] <= 9445.976759 ) {
                return {
                pane: 'pane_indexscore_1',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,191,191,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['sum_index'] >= 9445.976759 && feature.properties['sum_index'] <= 10171.347322 ) {
                return {
                pane: 'pane_indexscore_1',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,128,128,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['sum_index'] >= 10171.347322 && feature.properties['sum_index'] <= 11337.902378 ) {
                return {
                pane: 'pane_indexscore_1',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,64,64,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['sum_index'] >= 11337.902378 && feature.properties['sum_index'] <= 27073.197969 ) {
                return {
                pane: 'pane_indexscore_1',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,0,0,1.0)',
                interactive: true,
            }
            }
        }
        map.createPane('pane_indexscore_1');
        map.getPane('pane_indexscore_1').style.zIndex = 401;
        map.getPane('pane_indexscore_1').style['mix-blend-mode'] = 'normal';
        var layer_indexscore_1 = new L.geoJson(json_indexscore_1, {
            attribution: '',
            interactive: true,
            dataVar: 'json_indexscore_1',
            layerName: 'layer_indexscore_1',
            pane: 'pane_indexscore_1',
            onEachFeature: pop_indexscore_1,
            style: style_indexscore_1_0,
        });
        bounds_group.addLayer(layer_indexscore_1);
        map.addLayer(layer_indexscore_1);
        function pop_unemployment_2(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>fid</strong><br />' + (feature.properties['fid'] !== null ? autolinker.link(feature.properties['fid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_1</strong><br />' + (feature.properties['FIELD_1'] !== null ? autolinker.link(feature.properties['FIELD_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_2</strong><br />' + (feature.properties['FIELD_2'] !== null ? autolinker.link(feature.properties['FIELD_2'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_3</strong><br />' + (feature.properties['FIELD_3'] !== null ? autolinker.link(feature.properties['FIELD_3'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_4</strong><br />' + (feature.properties['FIELD_4'] !== null ? autolinker.link(feature.properties['FIELD_4'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_5</strong><br />' + (feature.properties['FIELD_5'] !== null ? autolinker.link(feature.properties['FIELD_5'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_6</strong><br />' + (feature.properties['FIELD_6'] !== null ? autolinker.link(feature.properties['FIELD_6'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_7</strong><br />' + (feature.properties['FIELD_7'] !== null ? autolinker.link(feature.properties['FIELD_7'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_8</strong><br />' + (feature.properties['FIELD_8'] !== null ? autolinker.link(feature.properties['FIELD_8'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_9</strong><br />' + (feature.properties['FIELD_9'] !== null ? autolinker.link(feature.properties['FIELD_9'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_10</strong><br />' + (feature.properties['FIELD_10'] !== null ? autolinker.link(feature.properties['FIELD_10'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_11</strong><br />' + (feature.properties['FIELD_11'] !== null ? autolinker.link(feature.properties['FIELD_11'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_12</strong><br />' + (feature.properties['FIELD_12'] !== null ? autolinker.link(feature.properties['FIELD_12'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_13</strong><br />' + (feature.properties['FIELD_13'] !== null ? autolinker.link(feature.properties['FIELD_13'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_14</strong><br />' + (feature.properties['FIELD_14'] !== null ? autolinker.link(feature.properties['FIELD_14'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_15</strong><br />' + (feature.properties['FIELD_15'] !== null ? autolinker.link(feature.properties['FIELD_15'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_17</strong><br />' + (feature.properties['FIELD_17'] !== null ? autolinker.link(feature.properties['FIELD_17'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_18</strong><br />' + (feature.properties['FIELD_18'] !== null ? autolinker.link(feature.properties['FIELD_18'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Neighbourhood</strong><br />' + (feature.properties['Neighbourhood'] !== null ? autolinker.link(feature.properties['Neighbourhood'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Combined Indicators</strong><br />' + (feature.properties['Combined Indicators'] !== null ? autolinker.link(feature.properties['Combined Indicators'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Pop</strong><br />' + (feature.properties['Total_Pop'] !== null ? autolinker.link(feature.properties['Total_Pop'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Area</strong><br />' + (feature.properties['Total_Area'] !== null ? autolinker.link(feature.properties['Total_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>aveIncome</strong><br />' + (feature.properties['aveIncome'] !== null ? autolinker.link(feature.properties['aveIncome'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>pop_density </strong><br />' + (feature.properties['pop_density '] !== null ? autolinker.link(feature.properties['pop_density '].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>unemployment</strong><br />' + (feature.properties['unemployment'] !== null ? autolinker.link(feature.properties['unemployment'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>rentbank</strong><br />' + (feature.properties['rentbank'] !== null ? autolinker.link(feature.properties['rentbank'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>socialassistance</strong><br />' + (feature.properties['socialassistance'] !== null ? autolinker.link(feature.properties['socialassistance'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>debtrisk</strong><br />' + (feature.properties['debtrisk'] !== null ? autolinker.link(feature.properties['debtrisk'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>sum_index</strong><br />' + (feature.properties['sum_index'] !== null ? autolinker.link(feature.properties['sum_index'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_unemployment_2_0(feature) {
            if (feature.properties['unemployment'] >= 0.000000 && feature.properties['unemployment'] <= 0.206149 ) {
                return {
                pane: 'pane_unemployment_2',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,255,255,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['unemployment'] >= 0.206149 && feature.properties['unemployment'] <= 0.281391 ) {
                return {
                pane: 'pane_unemployment_2',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,191,191,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['unemployment'] >= 0.281391 && feature.properties['unemployment'] <= 0.390497 ) {
                return {
                pane: 'pane_unemployment_2',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,128,128,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['unemployment'] >= 0.390497 && feature.properties['unemployment'] <= 0.512181 ) {
                return {
                pane: 'pane_unemployment_2',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,64,64,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['unemployment'] >= 0.512181 && feature.properties['unemployment'] <= 1.000000 ) {
                return {
                pane: 'pane_unemployment_2',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,0,0,1.0)',
                interactive: true,
            }
            }
        }
        map.createPane('pane_unemployment_2');
        map.getPane('pane_unemployment_2').style.zIndex = 402;
        map.getPane('pane_unemployment_2').style['mix-blend-mode'] = 'normal';
        var layer_unemployment_2 = new L.geoJson(json_unemployment_2, {
            attribution: '',
            interactive: true,
            dataVar: 'json_unemployment_2',
            layerName: 'layer_unemployment_2',
            pane: 'pane_unemployment_2',
            onEachFeature: pop_unemployment_2,
            style: style_unemployment_2_0,
        });
        bounds_group.addLayer(layer_unemployment_2);
        map.addLayer(layer_unemployment_2);
        function pop_rentbank_3(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>fid</strong><br />' + (feature.properties['fid'] !== null ? autolinker.link(feature.properties['fid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_1</strong><br />' + (feature.properties['FIELD_1'] !== null ? autolinker.link(feature.properties['FIELD_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_2</strong><br />' + (feature.properties['FIELD_2'] !== null ? autolinker.link(feature.properties['FIELD_2'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_3</strong><br />' + (feature.properties['FIELD_3'] !== null ? autolinker.link(feature.properties['FIELD_3'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_4</strong><br />' + (feature.properties['FIELD_4'] !== null ? autolinker.link(feature.properties['FIELD_4'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_5</strong><br />' + (feature.properties['FIELD_5'] !== null ? autolinker.link(feature.properties['FIELD_5'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_6</strong><br />' + (feature.properties['FIELD_6'] !== null ? autolinker.link(feature.properties['FIELD_6'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_7</strong><br />' + (feature.properties['FIELD_7'] !== null ? autolinker.link(feature.properties['FIELD_7'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_8</strong><br />' + (feature.properties['FIELD_8'] !== null ? autolinker.link(feature.properties['FIELD_8'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_9</strong><br />' + (feature.properties['FIELD_9'] !== null ? autolinker.link(feature.properties['FIELD_9'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_10</strong><br />' + (feature.properties['FIELD_10'] !== null ? autolinker.link(feature.properties['FIELD_10'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_11</strong><br />' + (feature.properties['FIELD_11'] !== null ? autolinker.link(feature.properties['FIELD_11'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_12</strong><br />' + (feature.properties['FIELD_12'] !== null ? autolinker.link(feature.properties['FIELD_12'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_13</strong><br />' + (feature.properties['FIELD_13'] !== null ? autolinker.link(feature.properties['FIELD_13'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_14</strong><br />' + (feature.properties['FIELD_14'] !== null ? autolinker.link(feature.properties['FIELD_14'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_15</strong><br />' + (feature.properties['FIELD_15'] !== null ? autolinker.link(feature.properties['FIELD_15'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_17</strong><br />' + (feature.properties['FIELD_17'] !== null ? autolinker.link(feature.properties['FIELD_17'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_18</strong><br />' + (feature.properties['FIELD_18'] !== null ? autolinker.link(feature.properties['FIELD_18'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Neighbourhood</strong><br />' + (feature.properties['Neighbourhood'] !== null ? autolinker.link(feature.properties['Neighbourhood'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Combined Indicators</strong><br />' + (feature.properties['Combined Indicators'] !== null ? autolinker.link(feature.properties['Combined Indicators'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Pop</strong><br />' + (feature.properties['Total_Pop'] !== null ? autolinker.link(feature.properties['Total_Pop'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Area</strong><br />' + (feature.properties['Total_Area'] !== null ? autolinker.link(feature.properties['Total_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>aveIncome</strong><br />' + (feature.properties['aveIncome'] !== null ? autolinker.link(feature.properties['aveIncome'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>pop_density </strong><br />' + (feature.properties['pop_density '] !== null ? autolinker.link(feature.properties['pop_density '].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>unemployment</strong><br />' + (feature.properties['unemployment'] !== null ? autolinker.link(feature.properties['unemployment'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>rentbank</strong><br />' + (feature.properties['rentbank'] !== null ? autolinker.link(feature.properties['rentbank'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>socialassistance</strong><br />' + (feature.properties['socialassistance'] !== null ? autolinker.link(feature.properties['socialassistance'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>debtrisk</strong><br />' + (feature.properties['debtrisk'] !== null ? autolinker.link(feature.properties['debtrisk'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>sum_index</strong><br />' + (feature.properties['sum_index'] !== null ? autolinker.link(feature.properties['sum_index'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_rentbank_3_0(feature) {
            if (feature.properties['rentbank'] >= 0.000000 && feature.properties['rentbank'] <= 0.088550 ) {
                return {
                pane: 'pane_rentbank_3',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,255,255,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['rentbank'] >= 0.088550 && feature.properties['rentbank'] <= 0.157695 ) {
                return {
                pane: 'pane_rentbank_3',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,191,191,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['rentbank'] >= 0.157695 && feature.properties['rentbank'] <= 0.228747 ) {
                return {
                pane: 'pane_rentbank_3',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,128,128,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['rentbank'] >= 0.228747 && feature.properties['rentbank'] <= 0.357945 ) {
                return {
                pane: 'pane_rentbank_3',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,64,64,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['rentbank'] >= 0.357945 && feature.properties['rentbank'] <= 1.000000 ) {
                return {
                pane: 'pane_rentbank_3',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,0,0,1.0)',
                interactive: true,
            }
            }
        }
        map.createPane('pane_rentbank_3');
        map.getPane('pane_rentbank_3').style.zIndex = 403;
        map.getPane('pane_rentbank_3').style['mix-blend-mode'] = 'normal';
        var layer_rentbank_3 = new L.geoJson(json_rentbank_3, {
            attribution: '',
            interactive: true,
            dataVar: 'json_rentbank_3',
            layerName: 'layer_rentbank_3',
            pane: 'pane_rentbank_3',
            onEachFeature: pop_rentbank_3,
            style: style_rentbank_3_0,
        });
        bounds_group.addLayer(layer_rentbank_3);
        map.addLayer(layer_rentbank_3);
        function pop_socialassistance_4(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>fid</strong><br />' + (feature.properties['fid'] !== null ? autolinker.link(feature.properties['fid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_1</strong><br />' + (feature.properties['FIELD_1'] !== null ? autolinker.link(feature.properties['FIELD_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_2</strong><br />' + (feature.properties['FIELD_2'] !== null ? autolinker.link(feature.properties['FIELD_2'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_3</strong><br />' + (feature.properties['FIELD_3'] !== null ? autolinker.link(feature.properties['FIELD_3'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_4</strong><br />' + (feature.properties['FIELD_4'] !== null ? autolinker.link(feature.properties['FIELD_4'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_5</strong><br />' + (feature.properties['FIELD_5'] !== null ? autolinker.link(feature.properties['FIELD_5'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_6</strong><br />' + (feature.properties['FIELD_6'] !== null ? autolinker.link(feature.properties['FIELD_6'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_7</strong><br />' + (feature.properties['FIELD_7'] !== null ? autolinker.link(feature.properties['FIELD_7'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_8</strong><br />' + (feature.properties['FIELD_8'] !== null ? autolinker.link(feature.properties['FIELD_8'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_9</strong><br />' + (feature.properties['FIELD_9'] !== null ? autolinker.link(feature.properties['FIELD_9'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_10</strong><br />' + (feature.properties['FIELD_10'] !== null ? autolinker.link(feature.properties['FIELD_10'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_11</strong><br />' + (feature.properties['FIELD_11'] !== null ? autolinker.link(feature.properties['FIELD_11'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_12</strong><br />' + (feature.properties['FIELD_12'] !== null ? autolinker.link(feature.properties['FIELD_12'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_13</strong><br />' + (feature.properties['FIELD_13'] !== null ? autolinker.link(feature.properties['FIELD_13'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_14</strong><br />' + (feature.properties['FIELD_14'] !== null ? autolinker.link(feature.properties['FIELD_14'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_15</strong><br />' + (feature.properties['FIELD_15'] !== null ? autolinker.link(feature.properties['FIELD_15'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_17</strong><br />' + (feature.properties['FIELD_17'] !== null ? autolinker.link(feature.properties['FIELD_17'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_18</strong><br />' + (feature.properties['FIELD_18'] !== null ? autolinker.link(feature.properties['FIELD_18'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Neighbourhood</strong><br />' + (feature.properties['Neighbourhood'] !== null ? autolinker.link(feature.properties['Neighbourhood'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Combined Indicators</strong><br />' + (feature.properties['Combined Indicators'] !== null ? autolinker.link(feature.properties['Combined Indicators'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Pop</strong><br />' + (feature.properties['Total_Pop'] !== null ? autolinker.link(feature.properties['Total_Pop'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Area</strong><br />' + (feature.properties['Total_Area'] !== null ? autolinker.link(feature.properties['Total_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>aveIncome</strong><br />' + (feature.properties['aveIncome'] !== null ? autolinker.link(feature.properties['aveIncome'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>pop_density </strong><br />' + (feature.properties['pop_density '] !== null ? autolinker.link(feature.properties['pop_density '].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>unemployment</strong><br />' + (feature.properties['unemployment'] !== null ? autolinker.link(feature.properties['unemployment'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>rentbank</strong><br />' + (feature.properties['rentbank'] !== null ? autolinker.link(feature.properties['rentbank'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>socialassistance</strong><br />' + (feature.properties['socialassistance'] !== null ? autolinker.link(feature.properties['socialassistance'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>debtrisk</strong><br />' + (feature.properties['debtrisk'] !== null ? autolinker.link(feature.properties['debtrisk'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>sum_index</strong><br />' + (feature.properties['sum_index'] !== null ? autolinker.link(feature.properties['sum_index'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_socialassistance_4_0(feature) {
            if (feature.properties['socialassistance'] >= 0.000000 && feature.properties['socialassistance'] <= 0.122790 ) {
                return {
                pane: 'pane_socialassistance_4',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,255,255,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['socialassistance'] >= 0.122790 && feature.properties['socialassistance'] <= 0.231422 ) {
                return {
                pane: 'pane_socialassistance_4',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,191,191,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['socialassistance'] >= 0.231422 && feature.properties['socialassistance'] <= 0.353395 ) {
                return {
                pane: 'pane_socialassistance_4',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,128,128,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['socialassistance'] >= 0.353395 && feature.properties['socialassistance'] <= 0.511813 ) {
                return {
                pane: 'pane_socialassistance_4',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,64,64,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['socialassistance'] >= 0.511813 && feature.properties['socialassistance'] <= 1.000000 ) {
                return {
                pane: 'pane_socialassistance_4',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,0,0,1.0)',
                interactive: true,
            }
            }
        }
        map.createPane('pane_socialassistance_4');
        map.getPane('pane_socialassistance_4').style.zIndex = 404;
        map.getPane('pane_socialassistance_4').style['mix-blend-mode'] = 'normal';
        var layer_socialassistance_4 = new L.geoJson(json_socialassistance_4, {
            attribution: '',
            interactive: true,
            dataVar: 'json_socialassistance_4',
            layerName: 'layer_socialassistance_4',
            pane: 'pane_socialassistance_4',
            onEachFeature: pop_socialassistance_4,
            style: style_socialassistance_4_0,
        });
        bounds_group.addLayer(layer_socialassistance_4);
        map.addLayer(layer_socialassistance_4);
        function pop_debtrisk_5(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>fid</strong><br />' + (feature.properties['fid'] !== null ? autolinker.link(feature.properties['fid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_1</strong><br />' + (feature.properties['FIELD_1'] !== null ? autolinker.link(feature.properties['FIELD_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_2</strong><br />' + (feature.properties['FIELD_2'] !== null ? autolinker.link(feature.properties['FIELD_2'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_3</strong><br />' + (feature.properties['FIELD_3'] !== null ? autolinker.link(feature.properties['FIELD_3'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_4</strong><br />' + (feature.properties['FIELD_4'] !== null ? autolinker.link(feature.properties['FIELD_4'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_5</strong><br />' + (feature.properties['FIELD_5'] !== null ? autolinker.link(feature.properties['FIELD_5'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_6</strong><br />' + (feature.properties['FIELD_6'] !== null ? autolinker.link(feature.properties['FIELD_6'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_7</strong><br />' + (feature.properties['FIELD_7'] !== null ? autolinker.link(feature.properties['FIELD_7'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_8</strong><br />' + (feature.properties['FIELD_8'] !== null ? autolinker.link(feature.properties['FIELD_8'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_9</strong><br />' + (feature.properties['FIELD_9'] !== null ? autolinker.link(feature.properties['FIELD_9'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_10</strong><br />' + (feature.properties['FIELD_10'] !== null ? autolinker.link(feature.properties['FIELD_10'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_11</strong><br />' + (feature.properties['FIELD_11'] !== null ? autolinker.link(feature.properties['FIELD_11'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_12</strong><br />' + (feature.properties['FIELD_12'] !== null ? autolinker.link(feature.properties['FIELD_12'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_13</strong><br />' + (feature.properties['FIELD_13'] !== null ? autolinker.link(feature.properties['FIELD_13'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_14</strong><br />' + (feature.properties['FIELD_14'] !== null ? autolinker.link(feature.properties['FIELD_14'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_15</strong><br />' + (feature.properties['FIELD_15'] !== null ? autolinker.link(feature.properties['FIELD_15'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_17</strong><br />' + (feature.properties['FIELD_17'] !== null ? autolinker.link(feature.properties['FIELD_17'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_18</strong><br />' + (feature.properties['FIELD_18'] !== null ? autolinker.link(feature.properties['FIELD_18'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Neighbourhood</strong><br />' + (feature.properties['Neighbourhood'] !== null ? autolinker.link(feature.properties['Neighbourhood'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Combined Indicators</strong><br />' + (feature.properties['Combined Indicators'] !== null ? autolinker.link(feature.properties['Combined Indicators'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Pop</strong><br />' + (feature.properties['Total_Pop'] !== null ? autolinker.link(feature.properties['Total_Pop'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Area</strong><br />' + (feature.properties['Total_Area'] !== null ? autolinker.link(feature.properties['Total_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>aveIncome</strong><br />' + (feature.properties['aveIncome'] !== null ? autolinker.link(feature.properties['aveIncome'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>pop_density </strong><br />' + (feature.properties['pop_density '] !== null ? autolinker.link(feature.properties['pop_density '].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>unemployment</strong><br />' + (feature.properties['unemployment'] !== null ? autolinker.link(feature.properties['unemployment'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>rentbank</strong><br />' + (feature.properties['rentbank'] !== null ? autolinker.link(feature.properties['rentbank'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>socialassistance</strong><br />' + (feature.properties['socialassistance'] !== null ? autolinker.link(feature.properties['socialassistance'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>debtrisk</strong><br />' + (feature.properties['debtrisk'] !== null ? autolinker.link(feature.properties['debtrisk'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>sum_index</strong><br />' + (feature.properties['sum_index'] !== null ? autolinker.link(feature.properties['sum_index'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_debtrisk_5_0(feature) {
            if (feature.properties['debtrisk'] >= 0.000000 && feature.properties['debtrisk'] <= 0.177852 ) {
                return {
                pane: 'pane_debtrisk_5',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,0,0,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['debtrisk'] >= 0.177852 && feature.properties['debtrisk'] <= 0.285573 ) {
                return {
                pane: 'pane_debtrisk_5',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,64,64,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['debtrisk'] >= 0.285573 && feature.properties['debtrisk'] <= 0.419345 ) {
                return {
                pane: 'pane_debtrisk_5',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,128,128,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['debtrisk'] >= 0.419345 && feature.properties['debtrisk'] <= 0.585223 ) {
                return {
                pane: 'pane_debtrisk_5',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,191,191,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['debtrisk'] >= 0.585223 && feature.properties['debtrisk'] <= 1.000000 ) {
                return {
                pane: 'pane_debtrisk_5',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,255,255,1.0)',
                interactive: true,
            }
            }
        }
        map.createPane('pane_debtrisk_5');
        map.getPane('pane_debtrisk_5').style.zIndex = 405;
        map.getPane('pane_debtrisk_5').style['mix-blend-mode'] = 'normal';
        var layer_debtrisk_5 = new L.geoJson(json_debtrisk_5, {
            attribution: '',
            interactive: true,
            dataVar: 'json_debtrisk_5',
            layerName: 'layer_debtrisk_5',
            pane: 'pane_debtrisk_5',
            onEachFeature: pop_debtrisk_5,
            style: style_debtrisk_5_0,
        });
        bounds_group.addLayer(layer_debtrisk_5);
        map.addLayer(layer_debtrisk_5);
        function pop_aveincome_6(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>fid</strong><br />' + (feature.properties['fid'] !== null ? autolinker.link(feature.properties['fid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_1</strong><br />' + (feature.properties['FIELD_1'] !== null ? autolinker.link(feature.properties['FIELD_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_2</strong><br />' + (feature.properties['FIELD_2'] !== null ? autolinker.link(feature.properties['FIELD_2'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_3</strong><br />' + (feature.properties['FIELD_3'] !== null ? autolinker.link(feature.properties['FIELD_3'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_4</strong><br />' + (feature.properties['FIELD_4'] !== null ? autolinker.link(feature.properties['FIELD_4'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_5</strong><br />' + (feature.properties['FIELD_5'] !== null ? autolinker.link(feature.properties['FIELD_5'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_6</strong><br />' + (feature.properties['FIELD_6'] !== null ? autolinker.link(feature.properties['FIELD_6'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_7</strong><br />' + (feature.properties['FIELD_7'] !== null ? autolinker.link(feature.properties['FIELD_7'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_8</strong><br />' + (feature.properties['FIELD_8'] !== null ? autolinker.link(feature.properties['FIELD_8'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_9</strong><br />' + (feature.properties['FIELD_9'] !== null ? autolinker.link(feature.properties['FIELD_9'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_10</strong><br />' + (feature.properties['FIELD_10'] !== null ? autolinker.link(feature.properties['FIELD_10'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_11</strong><br />' + (feature.properties['FIELD_11'] !== null ? autolinker.link(feature.properties['FIELD_11'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_12</strong><br />' + (feature.properties['FIELD_12'] !== null ? autolinker.link(feature.properties['FIELD_12'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_13</strong><br />' + (feature.properties['FIELD_13'] !== null ? autolinker.link(feature.properties['FIELD_13'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_14</strong><br />' + (feature.properties['FIELD_14'] !== null ? autolinker.link(feature.properties['FIELD_14'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_15</strong><br />' + (feature.properties['FIELD_15'] !== null ? autolinker.link(feature.properties['FIELD_15'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_17</strong><br />' + (feature.properties['FIELD_17'] !== null ? autolinker.link(feature.properties['FIELD_17'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_18</strong><br />' + (feature.properties['FIELD_18'] !== null ? autolinker.link(feature.properties['FIELD_18'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Neighbourhood</strong><br />' + (feature.properties['Neighbourhood'] !== null ? autolinker.link(feature.properties['Neighbourhood'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Combined Indicators</strong><br />' + (feature.properties['Combined Indicators'] !== null ? autolinker.link(feature.properties['Combined Indicators'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Pop</strong><br />' + (feature.properties['Total_Pop'] !== null ? autolinker.link(feature.properties['Total_Pop'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Area</strong><br />' + (feature.properties['Total_Area'] !== null ? autolinker.link(feature.properties['Total_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>aveIncome</strong><br />' + (feature.properties['aveIncome'] !== null ? autolinker.link(feature.properties['aveIncome'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>pop_density </strong><br />' + (feature.properties['pop_density '] !== null ? autolinker.link(feature.properties['pop_density '].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>unemployment</strong><br />' + (feature.properties['unemployment'] !== null ? autolinker.link(feature.properties['unemployment'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>rentbank</strong><br />' + (feature.properties['rentbank'] !== null ? autolinker.link(feature.properties['rentbank'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>socialassistance</strong><br />' + (feature.properties['socialassistance'] !== null ? autolinker.link(feature.properties['socialassistance'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>debtrisk</strong><br />' + (feature.properties['debtrisk'] !== null ? autolinker.link(feature.properties['debtrisk'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>sum_index</strong><br />' + (feature.properties['sum_index'] !== null ? autolinker.link(feature.properties['sum_index'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_aveincome_6_0(feature) {
            if (feature.properties['aveIncome'] >= 30794.000000 && feature.properties['aveIncome'] <= 44588.800000 ) {
                return {
                pane: 'pane_aveincome_6',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,0,0,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['aveIncome'] >= 44588.800000 && feature.properties['aveIncome'] <= 50656.400000 ) {
                return {
                pane: 'pane_aveincome_6',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,64,64,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['aveIncome'] >= 50656.400000 && feature.properties['aveIncome'] <= 55212.400000 ) {
                return {
                pane: 'pane_aveincome_6',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,128,128,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['aveIncome'] >= 55212.400000 && feature.properties['aveIncome'] <= 61798.400000 ) {
                return {
                pane: 'pane_aveincome_6',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,191,191,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['aveIncome'] >= 61798.400000 && feature.properties['aveIncome'] <= 161448.000000 ) {
                return {
                pane: 'pane_aveincome_6',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,255,255,1.0)',
                interactive: true,
            }
            }
        }
        map.createPane('pane_aveincome_6');
        map.getPane('pane_aveincome_6').style.zIndex = 406;
        map.getPane('pane_aveincome_6').style['mix-blend-mode'] = 'normal';
        var layer_aveincome_6 = new L.geoJson(json_aveincome_6, {
            attribution: '',
            interactive: true,
            dataVar: 'json_aveincome_6',
            layerName: 'layer_aveincome_6',
            pane: 'pane_aveincome_6',
            onEachFeature: pop_aveincome_6,
            style: style_aveincome_6_0,
        });
        bounds_group.addLayer(layer_aveincome_6);
        map.addLayer(layer_aveincome_6);
        function pop_popdensity_7(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>fid</strong><br />' + (feature.properties['fid'] !== null ? autolinker.link(feature.properties['fid'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_1</strong><br />' + (feature.properties['FIELD_1'] !== null ? autolinker.link(feature.properties['FIELD_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_2</strong><br />' + (feature.properties['FIELD_2'] !== null ? autolinker.link(feature.properties['FIELD_2'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_3</strong><br />' + (feature.properties['FIELD_3'] !== null ? autolinker.link(feature.properties['FIELD_3'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_4</strong><br />' + (feature.properties['FIELD_4'] !== null ? autolinker.link(feature.properties['FIELD_4'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_5</strong><br />' + (feature.properties['FIELD_5'] !== null ? autolinker.link(feature.properties['FIELD_5'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_6</strong><br />' + (feature.properties['FIELD_6'] !== null ? autolinker.link(feature.properties['FIELD_6'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_7</strong><br />' + (feature.properties['FIELD_7'] !== null ? autolinker.link(feature.properties['FIELD_7'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_8</strong><br />' + (feature.properties['FIELD_8'] !== null ? autolinker.link(feature.properties['FIELD_8'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_9</strong><br />' + (feature.properties['FIELD_9'] !== null ? autolinker.link(feature.properties['FIELD_9'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_10</strong><br />' + (feature.properties['FIELD_10'] !== null ? autolinker.link(feature.properties['FIELD_10'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_11</strong><br />' + (feature.properties['FIELD_11'] !== null ? autolinker.link(feature.properties['FIELD_11'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_12</strong><br />' + (feature.properties['FIELD_12'] !== null ? autolinker.link(feature.properties['FIELD_12'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_13</strong><br />' + (feature.properties['FIELD_13'] !== null ? autolinker.link(feature.properties['FIELD_13'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_14</strong><br />' + (feature.properties['FIELD_14'] !== null ? autolinker.link(feature.properties['FIELD_14'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_15</strong><br />' + (feature.properties['FIELD_15'] !== null ? autolinker.link(feature.properties['FIELD_15'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_17</strong><br />' + (feature.properties['FIELD_17'] !== null ? autolinker.link(feature.properties['FIELD_17'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>FIELD_18</strong><br />' + (feature.properties['FIELD_18'] !== null ? autolinker.link(feature.properties['FIELD_18'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Neighbourhood</strong><br />' + (feature.properties['Neighbourhood'] !== null ? autolinker.link(feature.properties['Neighbourhood'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Combined Indicators</strong><br />' + (feature.properties['Combined Indicators'] !== null ? autolinker.link(feature.properties['Combined Indicators'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Pop</strong><br />' + (feature.properties['Total_Pop'] !== null ? autolinker.link(feature.properties['Total_Pop'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>Total_Area</strong><br />' + (feature.properties['Total_Area'] !== null ? autolinker.link(feature.properties['Total_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>aveIncome</strong><br />' + (feature.properties['aveIncome'] !== null ? autolinker.link(feature.properties['aveIncome'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>pop_density </strong><br />' + (feature.properties['pop_density '] !== null ? autolinker.link(feature.properties['pop_density '].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>unemployment</strong><br />' + (feature.properties['unemployment'] !== null ? autolinker.link(feature.properties['unemployment'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>rentbank</strong><br />' + (feature.properties['rentbank'] !== null ? autolinker.link(feature.properties['rentbank'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>socialassistance</strong><br />' + (feature.properties['socialassistance'] !== null ? autolinker.link(feature.properties['socialassistance'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>debtrisk</strong><br />' + (feature.properties['debtrisk'] !== null ? autolinker.link(feature.properties['debtrisk'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2"><strong>sum_index</strong><br />' + (feature.properties['sum_index'] !== null ? autolinker.link(feature.properties['sum_index'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_popdensity_7_0(feature) {
            if (feature.properties['pop_density '] >= 990.340909 && feature.properties['pop_density '] <= 2708.238095 ) {
                return {
                pane: 'pane_popdensity_7',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,255,255,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['pop_density '] >= 2708.238095 && feature.properties['pop_density '] <= 3604.617605 ) {
                return {
                pane: 'pane_popdensity_7',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,213,213,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['pop_density '] >= 3604.617605 && feature.properties['pop_density '] <= 4368.571429 ) {
                return {
                pane: 'pane_popdensity_7',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,170,170,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['pop_density '] >= 4368.571429 && feature.properties['pop_density '] <= 5624.986574 ) {
                return {
                pane: 'pane_popdensity_7',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,128,128,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['pop_density '] >= 5624.986574 && feature.properties['pop_density '] <= 6824.108562 ) {
                return {
                pane: 'pane_popdensity_7',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,85,85,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['pop_density '] >= 6824.108562 && feature.properties['pop_density '] <= 8661.809524 ) {
                return {
                pane: 'pane_popdensity_7',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,42,42,1.0)',
                interactive: true,
            }
            }
            if (feature.properties['pop_density '] >= 8661.809524 && feature.properties['pop_density '] <= 44562.500000 ) {
                return {
                pane: 'pane_popdensity_7',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,0,0,1.0)',
                interactive: true,
            }
            }
        }
        map.createPane('pane_popdensity_7');
        map.getPane('pane_popdensity_7').style.zIndex = 407;
        map.getPane('pane_popdensity_7').style['mix-blend-mode'] = 'normal';
        var layer_popdensity_7 = new L.geoJson(json_popdensity_7, {
            attribution: '',
            interactive: true,
            dataVar: 'json_popdensity_7',
            layerName: 'layer_popdensity_7',
            pane: 'pane_popdensity_7',
            onEachFeature: pop_popdensity_7,
            style: style_popdensity_7_0,
        });
        bounds_group.addLayer(layer_popdensity_7);
        map.addLayer(layer_popdensity_7);
        var baseMaps = {};
        L.control.layers(baseMaps,{'popdensity<br /><table><tr><td style="text-align: center;"><img src="legend/popdensity_7_99027080.png" /></td><td>990 - 2708 </td></tr><tr><td style="text-align: center;"><img src="legend/popdensity_7_270836051.png" /></td><td>2708 - 3605 </td></tr><tr><td style="text-align: center;"><img src="legend/popdensity_7_360543692.png" /></td><td>3605 - 4369 </td></tr><tr><td style="text-align: center;"><img src="legend/popdensity_7_436956253.png" /></td><td>4369 - 5625 </td></tr><tr><td style="text-align: center;"><img src="legend/popdensity_7_562568244.png" /></td><td>5625 - 6824 </td></tr><tr><td style="text-align: center;"><img src="legend/popdensity_7_682486625.png" /></td><td>6824 - 8662 </td></tr><tr><td style="text-align: center;"><img src="legend/popdensity_7_8662445636.png" /></td><td>8662 - 44563 </td></tr></table>': layer_popdensity_7,'aveincome<br /><table><tr><td style="text-align: center;"><img src="legend/aveincome_6_30794445890.png" /></td><td>30794 - 44589 </td></tr><tr><td style="text-align: center;"><img src="legend/aveincome_6_44589506561.png" /></td><td>44589 - 50656 </td></tr><tr><td style="text-align: center;"><img src="legend/aveincome_6_50656552122.png" /></td><td>50656 - 55212 </td></tr><tr><td style="text-align: center;"><img src="legend/aveincome_6_55212617983.png" /></td><td>55212 - 61798 </td></tr><tr><td style="text-align: center;"><img src="legend/aveincome_6_617981614484.png" /></td><td>61798 - 161448 </td></tr></table>': layer_aveincome_6,'debtrisk<br /><table><tr><td style="text-align: center;"><img src="legend/debtrisk_5_00180.png" /></td><td>0 - 0.18 </td></tr><tr><td style="text-align: center;"><img src="legend/debtrisk_5_0180291.png" /></td><td>0.18 - 0.29 </td></tr><tr><td style="text-align: center;"><img src="legend/debtrisk_5_0290422.png" /></td><td>0.29 - 0.42 </td></tr><tr><td style="text-align: center;"><img src="legend/debtrisk_5_0420593.png" /></td><td>0.42 - 0.59 </td></tr><tr><td style="text-align: center;"><img src="legend/debtrisk_5_05914.png" /></td><td>0.59 - 1 </td></tr></table>': layer_debtrisk_5,'socialassistance<br /><table><tr><td style="text-align: center;"><img src="legend/socialassistance_4_00120.png" /></td><td>0 - 0.12 </td></tr><tr><td style="text-align: center;"><img src="legend/socialassistance_4_0120231.png" /></td><td>0.12 - 0.23 </td></tr><tr><td style="text-align: center;"><img src="legend/socialassistance_4_0230352.png" /></td><td>0.23 - 0.35 </td></tr><tr><td style="text-align: center;"><img src="legend/socialassistance_4_0350513.png" /></td><td>0.35 - 0.51 </td></tr><tr><td style="text-align: center;"><img src="legend/socialassistance_4_05114.png" /></td><td>0.51 - 1 </td></tr></table>': layer_socialassistance_4,'rentbank<br /><table><tr><td style="text-align: center;"><img src="legend/rentbank_3_000890.png" /></td><td>0 - 0.089 </td></tr><tr><td style="text-align: center;"><img src="legend/rentbank_3_008901581.png" /></td><td>0.089 - 0.158 </td></tr><tr><td style="text-align: center;"><img src="legend/rentbank_3_015802292.png" /></td><td>0.158 - 0.229 </td></tr><tr><td style="text-align: center;"><img src="legend/rentbank_3_022903583.png" /></td><td>0.229 - 0.358 </td></tr><tr><td style="text-align: center;"><img src="legend/rentbank_3_035814.png" /></td><td>0.358 - 1 </td></tr></table>': layer_rentbank_3,'unemployment<br /><table><tr><td style="text-align: center;"><img src="legend/unemployment_2_002060.png" /></td><td>0 - 0.206 </td></tr><tr><td style="text-align: center;"><img src="legend/unemployment_2_020602811.png" /></td><td>0.206 - 0.281 </td></tr><tr><td style="text-align: center;"><img src="legend/unemployment_2_02810392.png" /></td><td>0.281 - 0.39 </td></tr><tr><td style="text-align: center;"><img src="legend/unemployment_2_03905123.png" /></td><td>0.39 - 0.512 </td></tr><tr><td style="text-align: center;"><img src="legend/unemployment_2_051214.png" /></td><td>0.512 - 1 </td></tr></table>': layer_unemployment_2,'indexscore<br /><table><tr><td style="text-align: center;"><img src="legend/indexscore_1_659785500.png" /></td><td>6597 - 8550 </td></tr><tr><td style="text-align: center;"><img src="legend/indexscore_1_855094461.png" /></td><td>8550 - 9446 </td></tr><tr><td style="text-align: center;"><img src="legend/indexscore_1_9446101712.png" /></td><td>9446 - 10171 </td></tr><tr><td style="text-align: center;"><img src="legend/indexscore_1_10171113383.png" /></td><td>10171 - 11338 </td></tr><tr><td style="text-align: center;"><img src="legend/indexscore_1_11338270734.png" /></td><td>11338 - 27073 </td></tr></table>': layer_indexscore_1,"ESRI World Topo": layer_ESRIWorldTopo_0,},{collapsed:false}).addTo(map);
        setBounds();
        </script>
    </body>
</html>
